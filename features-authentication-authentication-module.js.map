{"version":3,"sources":["webpack:///./src/app/features/authentication/authentication-routing.module.ts","webpack:///./src/app/features/authentication/authentication.module.ts","webpack:///./src/app/features/authentication/login/login.component.html","webpack:///./src/app/features/authentication/login/login.component.ts"],"names":[],"mappings":"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","file":"features-authentication-authentication-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: '/auth/login',\n    pathMatch: 'full'\n  },\n  {\n    path: '',\n    children: [\n      { path: 'login', component: LoginComponent },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthenticationRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from '@app/shared';\nimport { CustomMaterialModule } from '@app/core';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    AuthenticationRoutingModule,\n    ReactiveFormsModule,\n    SharedModule,\n    CustomMaterialModule,\n    FormsModule\n  ]\n})\nexport class AuthenticationModule { }\n","module.exports = \"<mat-card>\\n    <mat-card-title>Login</mat-card-title>\\n    <mat-card-content>\\n        <form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n            <form-input formControlName=\\\"username\\\" [errors]=\\\"f.username.errors\\\" [errorVisible]=\\\"submitted\\\"\\n                [placeholder]=\\\"'Username or Email'\\\" [icon]=\\\"'email'\\\"></form-input>\\n\\n            <form-input formControlName=\\\"password\\\" [type]=\\\"'password'\\\" [errors]=\\\"f.password.errors\\\" [errorVisible]=\\\"submitted\\\"\\n                [placeholder]=\\\"'Password'\\\" [icon]=\\\"'lock'\\\"></form-input>\\n\\n            <button mat-raised-button [disabled]=\\\"loading\\\" color=\\\"primary\\\">\\n                <mat-icon><i class=\\\"material-icons md-dark\\\">done</i></mat-icon>\\n                Login\\n            </button>\\n            <a mat-button routerLink=\\\"/users/register\\\" class=\\\"btn btn-link\\\">\\n                <mat-icon><i class=\\\"material-icons md-dark\\\">person_add</i></mat-icon>\\n                Register\\n            </a>\\n            <a mat-button routerLink=\\\"/users/forgot-password\\\" class=\\\"btn btn-link\\\">\\n                <mat-icon><i class=\\\"material-icons md-dark\\\">contact_support</i></mat-icon>\\n                Forgot Password\\n            </a>\\n        </form>\\n    </mat-card-content>\\n</mat-card>\\n\\n<app-loading [visible]=\\\"loading\\\"></app-loading>\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\n\nimport { AlertService, AuthenticationService } from '@core/services';\nimport { FieldSpecs } from '@app/shared/validation/field-spec';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n  loginForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private authenticationService: AuthenticationService,\n    private alertService: AlertService\n  ) {\n    // redirect to home if already logged in\n    if (this.authenticationService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', [FieldSpecs.fieldRequiredValidator(\"usernameRequired\")]],\n      password: ['', [FieldSpecs.fieldRequiredValidator(\"passwordRequired\")]]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() { return this.loginForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.loading = true;\n    this.authenticationService.login(this.f.username.value, this.f.password.value)\n      .pipe(first())\n      .subscribe(\n        () => {\n          this.router.navigate([this.returnUrl]);\n        },\n        error => {\n          this.alertService.error(error);\n          this.loading = false;\n        });\n  }\n}\n"],"sourceRoot":""}